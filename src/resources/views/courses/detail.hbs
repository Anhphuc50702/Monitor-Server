<script src="/socket.io/socket.io.js"></script>
<script>
  var socket = io();
  const socket_io = require('socket.io');
  var io = socket_io();
  const changeStream = Temperature.watch();
  changeStream.on('change', (change) => {
    console.log(change); // You could parse out the needed info and send only that data. 
    io.emit('changeData', change);
}); 

</script>

<!DOCTYPE html>
<html>
<script>document.title = "temperatures"</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>  
</script>
{{#each temperature}}
    <aside class="created_date" style="background: rgb(255, 243, 224); box-sizing: inherit; width: 250px; color: #dd2c00; font-family: Roboto, 
    sans-serif; font-size: 14px; margin: 0px 0px; padding: 2px 2px 0px 20px; ">{{this.created_date}}:&ensp;<strong style="box-sizing: inherit; 
    margin-top: 0px;">{{this.nd}}<sup>o</sup>C</strong></aside>
{{/each}}
{{#each temperature}}
<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = [{{#each temperature}}{{this.created_date}},{{/each}}];
var yValues = [{{#each temperature}}{{this.nd}},{{/each}}];

new Chart("myChart", {
  type: "line",
  data: {
    labels: xValues,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: yValues
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 6, max:16}}],
    }
  }
});
</script>

</body>
</html>
{{/each}}
{{!-- <meta http-equiv="refresh" content="5" /> --}}